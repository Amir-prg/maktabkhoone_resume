{"version":3,"sources":["components/Fullpage.js","components/DownIcon.js","sections/TitleAndIcons.js","sections/AboutSection.js","components/SkillCard.js","sections/SkillSection.js","App.js","serviceWorker.js","index.js"],"names":["Fullpage","children","this","props","className","color","snowflakeCount","Component","DownIcon","src","icon","style","minWidth","display","flexDirection","transform","alignContent","alignItems","margin","TitleAndIcons","changeColor","setState","state","bind","data","colorme","alt","title","onClick","activeClass","to","spy","smooth","offset","duration","delay","name","subtitle","Object","keys","links","map","key","url","target","down","AboutSection","sections","SkillCard","skill","content","image","items","eachskill","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bf0ed6df.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./fullpage.css\";\r\nimport Snowfall from \"react-snowfall\";\r\n\r\nexport default class Fullpage extends Component {\r\n  render() {\r\n    const { children } = this.props;\r\n\r\n    return (\r\n      <div className={`fullpage${this.props.className} || '' `} color=\"red\">\r\n        {children}\r\n        <Snowfall color=\"rgb(17, 126, 153)\" snowflakeCount={120} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nconst DownIcon = (props) => {\r\n  return (\r\n    <div>\r\n      <img\r\n        src={props.icon}\r\n        style={{\r\n          minWidth: \"30px\",\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          transform: \"translateY(220px)\",\r\n          alignContent: \"center\",\r\n          alignItems: \"center\",\r\n          margin: \"auto\", \r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default DownIcon;\r\n","import React, { Component } from \"react\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport data from \"../data.json\";\r\nimport { SocialIcon } from \"react-social-icons\";\r\nimport DownIcon from \"../components/DownIcon\";\r\nimport { Link, Element } from \"react-scroll\";\r\n\r\nexport default class TitleAndIcons extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      color: \"rgb(17, 126, 153)\",\r\n    };\r\n    this.changeColor = this.changeColor.bind(this);\r\n  }\r\n  changeColor = () => {\r\n    this.setState({\r\n      color:\r\n        this.state.color === \"rgb(17, 126, 153)\"\r\n          ? \"orange\"\r\n          : \"rgb(17, 126, 153)\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return [\r\n      <div\r\n        className=\"navigation\"\r\n        style={{\r\n          color: this.state.color,\r\n        }}\r\n      >\r\n        <img\r\n          src={data.icon.colorme}\r\n          alt=\"\"\r\n          title=\"colorme\"\r\n          onClick={() => {\r\n            this.changeColor();\r\n          }}\r\n        />\r\n        <div\r\n          className=\"sections\"\r\n          style={{\r\n            color: this.state.color,\r\n          }}\r\n        >\r\n          <Link\r\n            activeClass=\"active\"\r\n            to=\"about\"\r\n            spy={true}\r\n            smooth={true}\r\n            offset={250}\r\n            duration={1000}\r\n            delay={0}\r\n            className=\"About-nav\"\r\n            style={{\r\n              color: this.state.color,\r\n            }}\r\n          >\r\n            About\r\n          </Link>\r\n\r\n          <Link\r\n            activeClass=\"active\"\r\n            to=\"Skills\"\r\n            spy={true}\r\n            smooth={true}\r\n            offset={1350}\r\n            duration={1000}\r\n            delay={0}\r\n            className=\"Skill-nav\"\r\n            style={{\r\n              color: this.state.color,\r\n            }}\r\n          >\r\n            Skills\r\n          </Link>\r\n          <Element name=\"about\" className=\"element\"></Element>\r\n\r\n          <Element name=\"Skills\" className=\"element\"></Element>\r\n        </div>\r\n      </div>,\r\n      <Fullpage\r\n        className=\"1\"\r\n        style={{\r\n          color: this.state.color,\r\n        }}\r\n      >\r\n        <h1\r\n          className=\"title\"\r\n          style={{\r\n            color: this.state.color,\r\n          }}\r\n          // onMouseEnter ={this.changeColor}\r\n          // onMouseLeave ={()=>{\r\n          //   this.changeColor()\r\n          // }}\r\n        >\r\n          {data.title}\r\n        </h1>\r\n        <h3\r\n          className=\"subtitle\"\r\n          style={{\r\n            color: this.state.color,\r\n          }}\r\n        >\r\n          {data.subtitle}\r\n        </h3>\r\n        <div className=\"link\">\r\n          {Object.keys(data.links).map((key) => {\r\n            return (\r\n              <SocialIcon\r\n                className=\"links\"\r\n                url={data.links[key]}\r\n                target=\"_blank\"\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <Link\r\n          activeClass=\"active\"\r\n          to=\"about\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={250}\r\n          duration={400}\r\n          delay={0}\r\n        >\r\n          <DownIcon icon={data.icon.down} color={this.state.color} />\r\n        </Link>\r\n\r\n        <Element name=\"about\" className=\"element\"></Element>\r\n      </Fullpage>,\r\n    ];\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport data from \"../data.json\";\r\nimport DownIcon from \"../components/DownIcon\";\r\nimport { Link, Element } from \"react-scroll\";\r\n\r\nexport default class AboutSection extends Component {\r\n  \r\n  render() {\r\n    return [\r\n      <Fullpage className=\"2\">\r\n        <h2 className=\"about-title\" >{data.sections[0].title}</h2>\r\n        <h4 className=\"about-paragraph\" >\r\n          <i>\r\n            {\" \"}\r\n              Hi, My name is Seyed Amir Heshmati and i'm 20 years old . I live in\r\n            Tehran and i'm studing computer engineering . I love programming and\r\n            web developing ,specially the programmin in back-end part and i want\r\n            to progress in these feilds. also i like team working because it helps\r\n            me to improve myself in different aspect such as\r\n            education,knowledge,social relationship and so on.\r\n            <br />\r\n            Thank you for visiting my website!\"\r\n          </i>\r\n        </h4>\r\n        <Link\r\n          activeClass=\"active\"\r\n          to=\"skills\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={250}\r\n          duration={400}\r\n          delay={0}\r\n        >\r\n          <DownIcon icon={data.icon.down} />\r\n        </Link>\r\n\r\n        <Element name=\"skills\" className=\"element\"></Element>\r\n      </Fullpage>\r\n    ];\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./skillcard.css\";\r\nexport default class SkillCard extends Component {\r\n  render() {\r\n    const { skill } = this.props;\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"image-wrapper\">\r\n          <img alt=\"\" src={skill.content.image} />\r\n        </div>\r\n        <div className=\"skill-title-wrapper\">\r\n          <h4>{skill.content.title}</h4>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport data from \"../data.json\";\r\n\r\nimport SkillCard from \"../components/SkillCard\";\r\n\r\nexport default class AboutSection extends Component {\r\n  render() {\r\n    return (\r\n      <Fullpage className=\"3\">\r\n        <h1 className=\"skill-title\">{data.sections[1].title}</h1>\r\n        <div className=\"card-wrapper\">\r\n          {data.sections[1].items.map((eachskill) => {\r\n            return <SkillCard skill={eachskill} />;\r\n          })}\r\n        </div>\r\n      </Fullpage>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport TitleAndIcons from \"./sections/TitleAndIcons\";\nimport AboutSection from \"./sections/AboutSection\";\nimport SkillSection from \"./sections/SkillSection\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <TitleAndIcons />\n        <AboutSection />\n        <SkillSection />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n\n  <React.StrictMode>\n      \n    <App />\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}